{"ast":null,"code":"\"use strict\";\n\nvar publishLast_1 = require('../operators/publishLast');\n/**\n * @return {ConnectableObservable<T>}\n * @method publishLast\n * @owner Observable\n */\n\n\nfunction publishLast() {\n  //TODO(benlesh): correct type-flow through here.\n  return publishLast_1.publishLast()(this);\n}\n\nexports.publishLast = publishLast;","map":{"version":3,"sources":["../../src/operator/publishLast.ts"],"names":[],"mappings":";;AAEA,IAAA,aAAA,GAAA,OAAA,CAA2C,0BAA3C,CAAA;AACA;;;;;;;AAKA,SAAA,WAAA,GAAA;AACE;AACA,SAAO,aAAA,CAAA,WAAA,GAAc,IAAd,CAAP;AACD;;AAHe,OAAA,CAAA,WAAA,GAAW,WAAX","sourcesContent":["import { Observable } from '../Observable';\nimport { ConnectableObservable } from '../observable/ConnectableObservable';\nimport { publishLast as higherOrder } from '../operators/publishLast';\n/**\n * @return {ConnectableObservable<T>}\n * @method publishLast\n * @owner Observable\n */\nexport function publishLast<T>(this: Observable<T>): ConnectableObservable<T> {\n  //TODO(benlesh): correct type-flow through here.\n  return higherOrder()(this) as ConnectableObservable<T>;\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}