{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\het\\\\ReactProject\\\\ch02\\\\02_02\\\\start\\\\Exercise-senior-front-end-master\\\\src\\\\index.js\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport assetPrices from './assetPrices.js';\nimport { render } from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport './App.css';\nimport Rx from 'rxjs/Rx';\nconst timeObservable = Rx.Observable.interval(1000);\n\nconst createAsset = (id, type) => ({\n  assetName: 'abc',\n  id,\n  price: Math.random() * 13,\n  type\n});\n\nconst getAllAssets = n => {\n  const result = [];\n\n  for (let i = 0; i < n; i++) {\n    result.push(createAsset(i, 'Stock'));\n    result.push(createAsset(i + n, 'Currency'));\n  }\n\n  return result;\n};\n\nclass Table extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      assets: getAllAssets(200)\n    };\n  }\n\n  componentDidMount() {\n    const mock = Rx.Observable.create(ob => {\n      timeObservable.subscribe(() => {\n        Rx.Observable.from(this.state.assets).map(asset => {\n          const random = Math.random();\n          asset.price = random >= 0.5 ? asset.price + random : asset.price - random;\n          console.log(asset.price);\n          return asset;\n        }).subscribe(asset => ob.next(asset));\n      });\n      return () => null;\n    });\n    mock.subscribe();\n  }\n\n  renderTableHeader() {\n    let header = Object.keys(this.state.assets[0]);\n    return header.map((key, index) => {\n      return /*#__PURE__*/React.createElement(\"th\", {\n        style: {\n          padding: \"15px\"\n        },\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 14\n        }\n      }, key.toUpperCase());\n    });\n  }\n\n  renderTableData() {\n    return this.state.assets.map((asset, index) => {\n      const {\n        id,\n        assetName,\n        price,\n        type\n      } = asset;\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 12\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        style: {\n          padding: \"15px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 15\n        }\n      }, id), /*#__PURE__*/React.createElement(\"td\", {\n        style: {\n          padding: \"15px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 15\n        }\n      }, assetName), /*#__PURE__*/React.createElement(\"td\", {\n        style: {\n          padding: \"15px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 15\n        }\n      }, price), /*#__PURE__*/React.createElement(\"td\", {\n        style: {\n          padding: \"15px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 15\n        }\n      }, type));\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      id: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }\n    }, \"Assets Realtime Details\"), /*#__PURE__*/React.createElement(\"table\", {\n      id: \"assets\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    }, this.renderTableHeader())), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }\n    }, this.renderTableData())));\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/React.createElement(Table, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 17\n  }\n}), document.getElementById('root'));\nserviceWorker.unregister();","map":{"version":3,"sources":["C:/Users/het/ReactProject/ch02/02_02/start/Exercise-senior-front-end-master/src/index.js"],"names":["React","Component","ReactDOM","assetPrices","render","serviceWorker","Rx","timeObservable","Observable","interval","createAsset","id","type","assetName","price","Math","random","getAllAssets","n","result","i","push","Table","constructor","props","state","assets","componentDidMount","mock","create","ob","subscribe","from","map","asset","console","log","next","renderTableHeader","header","Object","keys","key","index","padding","toUpperCase","renderTableData","document","getElementById","unregister"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport ReactDOM from 'react-dom';\r\nimport assetPrices from './assetPrices.js'\r\nimport { render } from 'react-dom'\r\nimport './index.css'\r\nimport * as serviceWorker from './serviceWorker'\r\nimport './App.css';\r\nimport Rx from 'rxjs/Rx';\r\n\r\nconst timeObservable = Rx.Observable.interval(1000);\r\nconst createAsset = (id, type) => ({\r\n  assetName: 'abc',\r\n  id,\r\n  price: Math.random() * 13,\r\n  type\r\n});\r\nconst getAllAssets = (n) => {\r\n  const result = [];\r\n  for (let i = 0; i < n; i++) {\r\n    result.push(createAsset(i, 'Stock'));\r\n    result.push(createAsset(i+n, 'Currency'));\r\n  }\r\n  return result;\r\n};\r\nclass Table extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      assets: getAllAssets(200)\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const mock = Rx.Observable.create((ob) => {\r\n      timeObservable.subscribe(() => {\r\n        Rx.Observable.from(this.state.assets).map((asset) => {\r\n          const random = Math.random();\r\n          asset.price = random >= 0.5 ? asset.price + random : asset.price - random;\r\n          console.log(asset.price);\r\n          return asset;\r\n        }).subscribe((asset) => ob.next(asset));\r\n      });\r\n      return () => null;\r\n    });\r\n    mock.subscribe();\r\n  }\r\n\r\n  renderTableHeader() {\r\n    let header = Object.keys(this.state.assets[0])\r\n    return header.map((key, index) => {\r\n      return <th style={{ padding: \"15px\" }} key={ index }>{ key.toUpperCase() }</th>;\r\n    });\r\n  }\r\n\r\n  renderTableData() {\r\n     return this.state.assets.map((asset, index) => {\r\n        const { id, assetName, price, type } = asset\r\n        return (\r\n           <tr key={id}>\r\n              <td style={{ padding: \"15px\" }}>{ id }</td>\r\n              <td style={{ padding: \"15px\" }}>{ assetName }</td>\r\n              <td style={{ padding: \"15px\" }}>{ price }</td>\r\n              <td style={{ padding: \"15px\" }}>{ type }</td>\r\n           </tr>\r\n        );\r\n     });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1 id='title'>Assets Realtime Details</h1>\r\n        <table id='assets'>\r\n          <thead>\r\n            <tr>\r\n              { this.renderTableHeader() }\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            { this.renderTableData() }\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nReactDOM.render(<Table />, document.getElementById('root'));\r\nserviceWorker.unregister()"]},"metadata":{},"sourceType":"module"}