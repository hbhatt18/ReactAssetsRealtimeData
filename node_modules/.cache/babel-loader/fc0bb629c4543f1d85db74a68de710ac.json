{"ast":null,"code":"\"use strict\";\n\nvar subscribeOn_1 = require('../operators/subscribeOn');\n/**\n * Asynchronously subscribes Observers to this Observable on the specified IScheduler.\n *\n * <img src=\"./img/subscribeOn.png\" width=\"100%\">\n *\n * @param {Scheduler} scheduler - The IScheduler to perform subscription actions on.\n * @return {Observable<T>} The source Observable modified so that its subscriptions happen on the specified IScheduler.\n .\n * @method subscribeOn\n * @owner Observable\n */\n\n\nfunction subscribeOn(scheduler, delay) {\n  if (delay === void 0) {\n    delay = 0;\n  }\n\n  return subscribeOn_1.subscribeOn(scheduler, delay)(this);\n}\n\nexports.subscribeOn = subscribeOn;","map":{"version":3,"sources":["../../src/operator/subscribeOn.ts"],"names":[],"mappings":";;AAGA,IAAA,aAAA,GAAA,OAAA,CAA2C,0BAA3C,CAAA;AAEA;;;;;;;;;;;;;AAWA,SAAA,WAAA,CAAoD,SAApD,EAA2E,KAA3E,EAA4F;AAAjB,MAAA,KAAA,KAAA,KAAA,CAAA,EAAiB;AAAjB,IAAA,KAAA,GAAA,CAAA;AAAiB;;AAC1F,SAAO,aAAA,CAAA,WAAA,CAAY,SAAZ,EAAuB,KAAvB,EAA8B,IAA9B,CAAP;AACD;;AAFe,OAAA,CAAA,WAAA,GAAW,WAAX","sourcesContent":["\nimport { IScheduler } from '../Scheduler';\nimport { Observable } from '../Observable';\nimport { subscribeOn as higherOrder } from '../operators/subscribeOn';\n\n/**\n * Asynchronously subscribes Observers to this Observable on the specified IScheduler.\n *\n * <img src=\"./img/subscribeOn.png\" width=\"100%\">\n *\n * @param {Scheduler} scheduler - The IScheduler to perform subscription actions on.\n * @return {Observable<T>} The source Observable modified so that its subscriptions happen on the specified IScheduler.\n .\n * @method subscribeOn\n * @owner Observable\n */\nexport function subscribeOn<T>(this: Observable<T>, scheduler: IScheduler, delay: number = 0): Observable<T> {\n  return higherOrder(scheduler, delay)(this) as Observable<T>;\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}