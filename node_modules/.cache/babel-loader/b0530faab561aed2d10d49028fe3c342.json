{"ast":null,"code":"\"use strict\";\n\nvar publishBehavior_1 = require('../operators/publishBehavior');\n/**\n * @param value\n * @return {ConnectableObservable<T>}\n * @method publishBehavior\n * @owner Observable\n */\n\n\nfunction publishBehavior(value) {\n  return publishBehavior_1.publishBehavior(value)(this);\n}\n\nexports.publishBehavior = publishBehavior;","map":{"version":3,"sources":["../../src/operator/publishBehavior.ts"],"names":[],"mappings":";;AAEA,IAAA,iBAAA,GAAA,OAAA,CAA+C,8BAA/C,CAAA;AAEA;;;;;;;;AAMA,SAAA,eAAA,CAAwD,KAAxD,EAAgE;AAC9D,SAAO,iBAAA,CAAA,eAAA,CAAY,KAAZ,EAAmB,IAAnB,CAAP;AACD;;AAFe,OAAA,CAAA,eAAA,GAAe,eAAf","sourcesContent":["import { Observable } from '../Observable';\nimport { ConnectableObservable } from '../observable/ConnectableObservable';\nimport { publishBehavior as higherOrder } from '../operators/publishBehavior';\n\n/**\n * @param value\n * @return {ConnectableObservable<T>}\n * @method publishBehavior\n * @owner Observable\n */\nexport function publishBehavior<T>(this: Observable<T>, value: T): ConnectableObservable<T> {\n  return higherOrder(value)(this);\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}