{"ast":null,"code":"\"use strict\";\n\nvar async_1 = require('../scheduler/async');\n\nvar timestamp_1 = require('../operators/timestamp');\n/**\n * @param scheduler\n * @return {Observable<Timestamp<any>>|WebSocketSubject<T>|Observable<T>}\n * @method timestamp\n * @owner Observable\n */\n\n\nfunction timestamp(scheduler) {\n  if (scheduler === void 0) {\n    scheduler = async_1.async;\n  }\n\n  return timestamp_1.timestamp(scheduler)(this);\n}\n\nexports.timestamp = timestamp;","map":{"version":3,"sources":["../../src/operator/timestamp.ts"],"names":[],"mappings":";;AAEA,IAAA,OAAA,GAAA,OAAA,CAAsB,oBAAtB,CAAA;;AACA,IAAA,WAAA,GAAA,OAAA,CAAyC,wBAAzC,CAAA;AAEA;;;;;;;;AAMA,SAAA,SAAA,CAAkD,SAAlD,EAA+E;AAA7B,MAAA,SAAA,KAAA,KAAA,CAAA,EAA6B;AAA7B,IAAA,SAAA,GAAA,OAAA,CAAA,KAAA;AAA6B;;AAC7E,SAAO,WAAA,CAAA,SAAA,CAAY,SAAZ,EAAuB,IAAvB,CAAP;AACD;;AAFe,OAAA,CAAA,SAAA,GAAS,SAAT","sourcesContent":["import { Observable } from '../Observable';\nimport { IScheduler } from '../Scheduler';\nimport { async } from '../scheduler/async';\nimport { timestamp as higherOrder } from '../operators/timestamp';\nimport { Timestamp } from '../operators/timestamp';\n/**\n * @param scheduler\n * @return {Observable<Timestamp<any>>|WebSocketSubject<T>|Observable<T>}\n * @method timestamp\n * @owner Observable\n */\nexport function timestamp<T>(this: Observable<T>, scheduler: IScheduler = async): Observable<Timestamp<T>> {\n  return higherOrder(scheduler)(this) as Observable<Timestamp<T>>;\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}