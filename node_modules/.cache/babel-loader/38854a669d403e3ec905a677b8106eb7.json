{"ast":null,"code":"\"use strict\";\n\nvar zipAll_1 = require('../operators/zipAll');\n/**\n * @param project\n * @return {Observable<R>|WebSocketSubject<T>|Observable<T>}\n * @method zipAll\n * @owner Observable\n */\n\n\nfunction zipAll(project) {\n  return zipAll_1.zipAll(project)(this);\n}\n\nexports.zipAll = zipAll;","map":{"version":3,"sources":["../../src/operator/zipAll.ts"],"names":[],"mappings":";;AACA,IAAA,QAAA,GAAA,OAAA,CAAsC,qBAAtC,CAAA;AAEA;;;;;;;;AAMA,SAAA,MAAA,CAAkD,OAAlD,EAAwF;AACtF,SAAO,QAAA,CAAA,MAAA,CAAY,OAAZ,EAAqB,IAArB,CAAP;AACD;;AAFe,OAAA,CAAA,MAAA,GAAM,MAAN","sourcesContent":["import { Observable } from '../Observable';\nimport { zipAll as higherOrder } from '../operators/zipAll';\n\n/**\n * @param project\n * @return {Observable<R>|WebSocketSubject<T>|Observable<T>}\n * @method zipAll\n * @owner Observable\n */\nexport function zipAll<T, R>(this: Observable<T>, project?: (...values: Array<any>) => R): Observable<R> {\n  return higherOrder(project)(this);\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}