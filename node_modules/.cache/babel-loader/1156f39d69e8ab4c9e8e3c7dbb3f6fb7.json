{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\het\\\\ReactProject\\\\ch02\\\\02_02\\\\start\\\\Exercise-senior-front-end-master\\\\src\\\\index.js\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport assetPrices from './assetPrices.js';\nimport { render } from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker'; //import TableData from './Table.js';\n\nconst elements = [];\n\nclass Table extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.lastUpdatedAt = lastUpdate => {\n      let time_diff = Date.now() - Number(lastUpdate.slice(-1)[0].time);\n\n      if (time_diff <= 4000) {\n        // stays 'just now' until this function is called again: WRONG\n        return 'just now';\n      } else if (time_diff > 4000 && time_diff < 60000) {\n        return '< 1m';\n      } else {\n        return '> 1m';\n      }\n    };\n\n    this.state = {\n      assets: [{\n        id: 1,\n        assetName: 'Apple',\n        price: 21,\n        lastUpdate: 'yesterday',\n        type: 'Stock'\n      }, {\n        id: 2,\n        assetName: 'Samsung',\n        price: 19,\n        lastUpdate: 'yesterday',\n        type: 'Stock'\n      }, {\n        id: 3,\n        assetName: 'USD',\n        price: 16,\n        lastUpdate: 'yesterday',\n        type: 'Currency'\n      }, {\n        id: 4,\n        assetName: 'INR',\n        price: 25,\n        lastUpdate: 'yesterday',\n        type: 'Currency'\n      }]\n    };\n  } // make this better\n\n\n  renderTableHeader() {\n    let header = Object.keys(this.state.assets[0]);\n    return header.map((key, index) => {\n      return /*#__PURE__*/React.createElement(\"th\", {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 16\n        }\n      }, key.toUpperCase());\n    });\n  }\n\n  renderTableData() {\n    return this.state.assets.map((asset, index) => {\n      const {\n        id,\n        assetName,\n        price,\n        lastUpdate,\n        type\n      } = asset; //destructuring\n\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 12\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 15\n        }\n      }, id), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 15\n        }\n      }, assetName), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 15\n        }\n      }, price), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 15\n        }\n      }, this.lastUpdatedAt(lastUpdate)), lastUpdate.slice(-1)[0].time, /*#__PURE__*/React.createElement(\"assetPrices\", {\n        key: index,\n        assetName: assetName,\n        assetData: assetName,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 19\n        }\n      })), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 15\n        }\n      }, type));\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      id: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 12\n      }\n    }, \"React Dynamic Table\"), /*#__PURE__*/React.createElement(\"table\", {\n      id: \"assets\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 18\n      }\n    }, this.renderTableHeader()), this.renderTableData())));\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/React.createElement(Table, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 17\n  }\n}), document.getElementById('root'));\nserviceWorker.unregister();","map":{"version":3,"sources":["C:/Users/het/ReactProject/ch02/02_02/start/Exercise-senior-front-end-master/src/index.js"],"names":["React","Component","ReactDOM","assetPrices","render","serviceWorker","elements","Table","constructor","props","lastUpdatedAt","lastUpdate","time_diff","Date","now","Number","slice","time","state","assets","id","assetName","price","type","renderTableHeader","header","Object","keys","map","key","index","toUpperCase","renderTableData","asset","document","getElementById","unregister"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport ReactDOM from 'react-dom';\r\nimport assetPrices from './assetPrices.js'\r\nimport { render } from 'react-dom'\r\nimport './index.css'\r\nimport * as serviceWorker from './serviceWorker'\r\n//import TableData from './Table.js';\r\n\r\nconst elements = []\r\n\r\nclass Table extends React.Component {\r\n  constructor(props) {\r\n     super(props)\r\n     this.state = {\r\n        assets: [\r\n           { id: 1, assetName: 'Apple', price: 21, lastUpdate: 'yesterday', type:'Stock' },\r\n           { id: 2, assetName: 'Samsung', price: 19, lastUpdate: 'yesterday', type:'Stock' },\r\n           { id: 3, assetName: 'USD', price: 16, lastUpdate: 'yesterday', type:'Currency' },\r\n           { id: 4, assetName: 'INR', price: 25, lastUpdate: 'yesterday', type:'Currency' }\r\n        ]\r\n     }\r\n  }\r\n\r\n\r\n  // make this better\r\n  lastUpdatedAt = (lastUpdate) => {\r\n   let time_diff = Date.now() - Number(lastUpdate.slice(-1)[0].time);\r\n   if(time_diff <= 4000){\r\n     // stays 'just now' until this function is called again: WRONG\r\n     return 'just now'\r\n   }\r\n   else if(time_diff > 4000 && time_diff <60000){\r\n     return '< 1m'\r\n   }\r\n   else{\r\n     return '> 1m'\r\n   }\r\n }\r\n\r\n  renderTableHeader() {\r\n     let header = Object.keys(this.state.assets[0])\r\n     return header.map((key, index) => {\r\n        return <th key={index}>{key.toUpperCase()}</th>\r\n     })\r\n  }\r\n\r\n  renderTableData() {\r\n     return this.state.assets.map((asset, index) => {\r\n        const { id, assetName, price, lastUpdate, type } = asset //destructuring\r\n        return (\r\n           <tr key={id}>\r\n              <td>{id}</td>\r\n              <td>{assetName}</td>\r\n              <td>{price}</td>\r\n              <td>\r\n              <td>{this.lastUpdatedAt(lastUpdate)}</td>\r\n              {lastUpdate.slice(-1)[0].time }\r\n                  <assetPrices\r\n                    key={index} assetName={assetName}\r\n                    assetData={assetName}\r\n                  />\r\n              </td>\r\n              <td>{type}</td>\r\n           </tr>\r\n        )\r\n     })\r\n  }\r\n\r\n  render() {\r\n     return (\r\n        <div>\r\n           <h1 id='title'>React Dynamic Table</h1>\r\n           <table id='assets'>\r\n              <tbody>\r\n                 <tr>{this.renderTableHeader()}</tr>\r\n                 {this.renderTableData()}\r\n              </tbody>\r\n           </table>\r\n        </div>\r\n     )\r\n  }\r\n}\r\n\r\nReactDOM.render(<Table />, document.getElementById('root'));\r\n\r\nserviceWorker.unregister()"]},"metadata":{},"sourceType":"module"}