{"ast":null,"code":"\"use strict\";\n\nvar isEmpty_1 = require('../operators/isEmpty');\n/**\n * If the source Observable is empty it returns an Observable that emits true, otherwise it emits false.\n *\n * <img src=\"./img/isEmpty.png\" width=\"100%\">\n *\n * @return {Observable} An Observable that emits a Boolean.\n * @method isEmpty\n * @owner Observable\n */\n\n\nfunction isEmpty() {\n  return isEmpty_1.isEmpty()(this);\n}\n\nexports.isEmpty = isEmpty;","map":{"version":3,"sources":["../../src/operator/isEmpty.ts"],"names":[],"mappings":";;AAEA,IAAA,SAAA,GAAA,OAAA,CAAuC,sBAAvC,CAAA;AAEA;;;;;;;;;;;AASA,SAAA,OAAA,GAAA;AACE,SAAO,SAAA,CAAA,OAAA,GAAc,IAAd,CAAP;AACD;;AAFe,OAAA,CAAA,OAAA,GAAO,OAAP","sourcesContent":["\nimport { Observable } from '../Observable';\nimport { isEmpty as higherOrder } from '../operators/isEmpty';\n\n/**\n * If the source Observable is empty it returns an Observable that emits true, otherwise it emits false.\n *\n * <img src=\"./img/isEmpty.png\" width=\"100%\">\n *\n * @return {Observable} An Observable that emits a Boolean.\n * @method isEmpty\n * @owner Observable\n */\nexport function isEmpty<T>(this: Observable<T>): Observable<boolean> {\n  return higherOrder()(this);\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}