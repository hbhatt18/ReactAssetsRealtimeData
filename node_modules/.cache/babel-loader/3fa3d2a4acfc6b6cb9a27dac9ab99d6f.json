{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\het\\\\ReactProject\\\\ch02\\\\02_02\\\\start\\\\react-is-fun\\\\src\\\\index.js\";\n\n/*import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();*/\nimport React, { Component } from 'react';\nimport { render } from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nlet bookList = [{\n  \"title\": \"The sun rises\",\n  \"author\": \"Earnest Hemmingway\",\n  \"numberOfPages\": 250\n}, {\n  \"title\": \"White Teeth\",\n  \"author\": \"Zadie Smith\",\n  \"numberOfPages\": 480\n}, {\n  \"title\": \"Cat's Cradle\",\n  \"author\": \"KurtVonnegut\",\n  \"numberOfPages\": 305\n}];\n\nconst Book = ({\n  title,\n  author,\n  numberOfPages,\n  freeBookmark\n}) => {\n  return /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, title), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, \"By: \", author), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, \"Pages: \", numberOfPages), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, \"Free Bookmark Today \", freeBookmark ? 'yes!' : 'no!'));\n};\n\nclass Library extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      open: true,\n      freeBookmark: true\n    };\n\n    this.toggleOpenClosed = () => {\n      this.setState(prevState => ({\n        open: !prevState.open\n      }));\n    };\n  }\n\n  render() {\n    const {\n      books\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }\n    }, \"The Library is \", this.state.open ? 'open' : 'close', \" \"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.toggleOpenClosed,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }\n    }, \"Change\"), books.map((book, i) => /*#__PURE__*/React.createElement(Book, {\n      key: i,\n      title: book.title,\n      author: book.author,\n      numberOfPages: book.numberOfPages,\n      freeBookmark: this.state.freeBookmark,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }\n    })));\n  }\n\n}\n\nrender( /*#__PURE__*/React.createElement(Library, {\n  books: bookList,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 3\n  }\n}), document.getElementById('root'));\nserviceWorker.unregister();","map":{"version":3,"sources":["C:/Users/het/ReactProject/ch02/02_02/start/react-is-fun/src/index.js"],"names":["React","Component","render","serviceWorker","bookList","Book","title","author","numberOfPages","freeBookmark","Library","state","open","toggleOpenClosed","setState","prevState","books","props","map","book","i","document","getElementById","unregister"],"mappings":";;AAAA;;;;;;;;;;;;;;;;;AAiBA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,OAAO,aAAP;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AAEA,IAAIC,QAAQ,GAAG,CACb;AAAC,WAAS,eAAV;AAA2B,YAAU,oBAArC;AAA2D,mBAAiB;AAA5E,CADa,EAEb;AAAC,WAAS,aAAV;AAAyB,YAAU,aAAnC;AAAkD,mBAAiB;AAAnE,CAFa,EAGb;AAAC,WAAS,cAAV;AAA0B,YAAU,cAApC;AAAoD,mBAAiB;AAArE,CAHa,CAAf;;AAMA,MAAMC,IAAI,GAAG,CAAC;AAACC,EAAAA,KAAD;AAAQC,EAAAA,MAAR;AAAgBC,EAAAA,aAAhB;AAA8BC,EAAAA;AAA9B,CAAD,KAAiD;AAC5D,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKH,KAAL,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAQC,MAAR,CAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAWC,aAAX,CAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAwBC,YAAY,GAAG,MAAH,GAAY,KAAhD,CAJF,CADF;AAQD,CATD;;AAWA,MAAMC,OAAN,SAAsBV,KAAK,CAACC,SAA5B,CAAsC;AAAA;AAAA;AAAA,SAEpCU,KAFoC,GAE5B;AACNC,MAAAA,IAAI,EAAE,IADA;AAENH,MAAAA,YAAY,EAAE;AAFR,KAF4B;;AAAA,SAOpCI,gBAPoC,GAOjB,MAAM;AACvB,WAAKC,QAAL,CAAeC,SAAS,KAAI;AAC1BH,QAAAA,IAAI,EAAE,CAACG,SAAS,CAACH;AADS,OAAJ,CAAxB;AAGD,KAXmC;AAAA;;AAYpCV,EAAAA,MAAM,GAAE;AACN,UAAM;AAAEc,MAAAA;AAAF,QAAY,KAAKC,KAAvB;AACA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAoB,KAAKN,KAAL,CAAWC,IAAX,GAAkB,MAAlB,GAA2B,OAA/C,MADF,eAEE;AAAQ,MAAA,OAAO,EAAE,KAAKC,gBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,EAGGG,KAAK,CAACE,GAAN,CACC,CAACC,IAAD,EAAOC,CAAP,kBACM,oBAAC,IAAD;AACI,MAAA,GAAG,EAAEA,CADT;AAEI,MAAA,KAAK,EAAED,IAAI,CAACb,KAFhB;AAGI,MAAA,MAAM,EAAEa,IAAI,CAACZ,MAHjB;AAII,MAAA,aAAa,EAAEY,IAAI,CAACX,aAJxB;AAKI,MAAA,YAAY,EAAE,KAAKG,KAAL,CAAWF,YAL7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFP,CAHH,CADF;AAgBD;;AA9BmC;;AAiCtCP,MAAM,eACJ,oBAAC,OAAD;AAAS,EAAA,KAAK,EAAEE,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADI,EAEJiB,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAFI,CAAN;AAKAnB,aAAa,CAACoB,UAAd","sourcesContent":["/*import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();*/\nimport React, { Component } from 'react'\nimport { render } from 'react-dom'\nimport './index.css'\nimport * as serviceWorker from './serviceWorker'\n\nlet bookList = [\n  {\"title\": \"The sun rises\", \"author\": \"Earnest Hemmingway\", \"numberOfPages\": 250},\n  {\"title\": \"White Teeth\", \"author\": \"Zadie Smith\", \"numberOfPages\": 480},\n  {\"title\": \"Cat's Cradle\", \"author\": \"KurtVonnegut\", \"numberOfPages\": 305}\n]\n\nconst Book = ({title, author, numberOfPages,freeBookmark}) => {\n  return(\n    <section>\n      <h2>{title}</h2>\n      <p>By: {author}</p>\n      <p>Pages: {numberOfPages}</p>\n      <p>Free Bookmark Today {freeBookmark ? 'yes!' : 'no!'}</p>\n    </section>\n  )\n}\n\nclass Library extends React.Component {\n\n  state = { \n    open: true,\n    freeBookmark: true\n  }\n  \n  toggleOpenClosed = () => {\n    this.setState( prevState =>({\n      open: !prevState.open\n    }))\n  }\n  render(){\n    const { books } = this.props\n    return(\n      <div>\n        <h1>The Library is {this.state.open ? 'open' : 'close'} </h1>\n        <button onClick={this.toggleOpenClosed}>Change</button>\n        {books.map(\n          (book, i) => \n                <Book\n                    key={i} \n                    title={book.title}\n                    author={book.author}\n                    numberOfPages={book.numberOfPages}\n                    freeBookmark={this.state.freeBookmark}/>\n  \n        )}\n      </div>\n    )\n  }\n}\n\nrender(\n  <Library books={bookList}/>,\n  document.getElementById('root')\n)\n\nserviceWorker.unregister()"]},"metadata":{},"sourceType":"module"}