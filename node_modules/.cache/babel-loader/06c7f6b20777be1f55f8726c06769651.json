{"ast":null,"code":"\"use strict\";\n\nvar FastMap = function () {\n  function FastMap() {\n    this.values = {};\n  }\n\n  FastMap.prototype.delete = function (key) {\n    this.values[key] = null;\n    return true;\n  };\n\n  FastMap.prototype.set = function (key, value) {\n    this.values[key] = value;\n    return this;\n  };\n\n  FastMap.prototype.get = function (key) {\n    return this.values[key];\n  };\n\n  FastMap.prototype.forEach = function (cb, thisArg) {\n    var values = this.values;\n\n    for (var key in values) {\n      if (values.hasOwnProperty(key) && values[key] !== null) {\n        cb.call(thisArg, values[key], key);\n      }\n    }\n  };\n\n  FastMap.prototype.clear = function () {\n    this.values = {};\n  };\n\n  return FastMap;\n}();\n\nexports.FastMap = FastMap;","map":{"version":3,"sources":["../../src/util/FastMap.ts"],"names":[],"mappings":";;AAAA,IAAA,OAAA,GAAA,YAAA;AAAA,WAAA,OAAA,GAAA;AACU,SAAA,MAAA,GAAiB,EAAjB;AA4BT;;AA1BC,EAAA,OAAA,CAAA,SAAA,CAAA,MAAA,GAAA,UAAO,GAAP,EAAkB;AAChB,SAAK,MAAL,CAAY,GAAZ,IAAmB,IAAnB;AACA,WAAO,IAAP;AACD,GAHD;;AAKA,EAAA,OAAA,CAAA,SAAA,CAAA,GAAA,GAAA,UAAI,GAAJ,EAAiB,KAAjB,EAA2B;AACzB,SAAK,MAAL,CAAY,GAAZ,IAAmB,KAAnB;AACA,WAAO,IAAP;AACD,GAHD;;AAKA,EAAA,OAAA,CAAA,SAAA,CAAA,GAAA,GAAA,UAAI,GAAJ,EAAe;AACb,WAAO,KAAK,MAAL,CAAY,GAAZ,CAAP;AACD,GAFD;;AAIA,EAAA,OAAA,CAAA,SAAA,CAAA,OAAA,GAAA,UAAQ,EAAR,EAA4C,OAA5C,EAAyD;AACvD,QAAM,MAAM,GAAG,KAAK,MAApB;;AACA,SAAK,IAAI,GAAT,IAAgB,MAAhB,EAAwB;AACtB,UAAI,MAAM,CAAC,cAAP,CAAsB,GAAtB,KAA8B,MAAM,CAAC,GAAD,CAAN,KAAgB,IAAlD,EAAwD;AACtD,QAAA,EAAE,CAAC,IAAH,CAAQ,OAAR,EAAiB,MAAM,CAAC,GAAD,CAAvB,EAA8B,GAA9B;AACD;AACF;AACF,GAPD;;AASA,EAAA,OAAA,CAAA,SAAA,CAAA,KAAA,GAAA,YAAA;AACE,SAAK,MAAL,GAAc,EAAd;AACD,GAFD;;AAGF,SAAA,OAAA;AAAC,CA7BD,EAAA;;AAAa,OAAA,CAAA,OAAA,GAAO,OAAP","sourcesContent":["export class FastMap {\n  private values: Object = {};\n\n  delete(key: string): boolean {\n    this.values[key] = null;\n    return true;\n  }\n\n  set(key: string, value: any): FastMap {\n    this.values[key] = value;\n    return this;\n  }\n\n  get(key: string): any {\n    return this.values[key];\n  }\n\n  forEach(cb: (value: any, key: any) => void, thisArg?: any): void {\n    const values = this.values;\n    for (let key in values) {\n      if (values.hasOwnProperty(key) && values[key] !== null) {\n        cb.call(thisArg, values[key], key);\n      }\n    }\n  }\n\n  clear(): void {\n    this.values = {};\n  }\n}"],"sourceRoot":""},"metadata":{},"sourceType":"script"}