{"ast":null,"code":"\"use strict\";\n/* tslint:disable:no-unused-variable */\n// Subject imported before Observable to bypass circular dependency issue since\n// Subject extends Observable and Observable references Subject in it's\n// definition\n\nvar Subject_1 = require('./Subject');\n\nexports.Subject = Subject_1.Subject;\nexports.AnonymousSubject = Subject_1.AnonymousSubject;\n/* tslint:enable:no-unused-variable */\n\nvar Observable_1 = require('./Observable');\n\nexports.Observable = Observable_1.Observable; // statics\n\n/* tslint:disable:no-use-before-declare */\n\nrequire('./add/observable/bindCallback');\n\nrequire('./add/observable/bindNodeCallback');\n\nrequire('./add/observable/combineLatest');\n\nrequire('./add/observable/concat');\n\nrequire('./add/observable/defer');\n\nrequire('./add/observable/empty');\n\nrequire('./add/observable/forkJoin');\n\nrequire('./add/observable/from');\n\nrequire('./add/observable/fromEvent');\n\nrequire('./add/observable/fromEventPattern');\n\nrequire('./add/observable/fromPromise');\n\nrequire('./add/observable/generate');\n\nrequire('./add/observable/if');\n\nrequire('./add/observable/interval');\n\nrequire('./add/observable/merge');\n\nrequire('./add/observable/race');\n\nrequire('./add/observable/never');\n\nrequire('./add/observable/of');\n\nrequire('./add/observable/onErrorResumeNext');\n\nrequire('./add/observable/pairs');\n\nrequire('./add/observable/range');\n\nrequire('./add/observable/using');\n\nrequire('./add/observable/throw');\n\nrequire('./add/observable/timer');\n\nrequire('./add/observable/zip'); //dom\n\n\nrequire('./add/observable/dom/ajax');\n\nrequire('./add/observable/dom/webSocket'); //operators\n\n\nrequire('./add/operator/buffer');\n\nrequire('./add/operator/bufferCount');\n\nrequire('./add/operator/bufferTime');\n\nrequire('./add/operator/bufferToggle');\n\nrequire('./add/operator/bufferWhen');\n\nrequire('./add/operator/catch');\n\nrequire('./add/operator/combineAll');\n\nrequire('./add/operator/combineLatest');\n\nrequire('./add/operator/concat');\n\nrequire('./add/operator/concatAll');\n\nrequire('./add/operator/concatMap');\n\nrequire('./add/operator/concatMapTo');\n\nrequire('./add/operator/count');\n\nrequire('./add/operator/dematerialize');\n\nrequire('./add/operator/debounce');\n\nrequire('./add/operator/debounceTime');\n\nrequire('./add/operator/defaultIfEmpty');\n\nrequire('./add/operator/delay');\n\nrequire('./add/operator/delayWhen');\n\nrequire('./add/operator/distinct');\n\nrequire('./add/operator/distinctUntilChanged');\n\nrequire('./add/operator/distinctUntilKeyChanged');\n\nrequire('./add/operator/do');\n\nrequire('./add/operator/exhaust');\n\nrequire('./add/operator/exhaustMap');\n\nrequire('./add/operator/expand');\n\nrequire('./add/operator/elementAt');\n\nrequire('./add/operator/filter');\n\nrequire('./add/operator/finally');\n\nrequire('./add/operator/find');\n\nrequire('./add/operator/findIndex');\n\nrequire('./add/operator/first');\n\nrequire('./add/operator/groupBy');\n\nrequire('./add/operator/ignoreElements');\n\nrequire('./add/operator/isEmpty');\n\nrequire('./add/operator/audit');\n\nrequire('./add/operator/auditTime');\n\nrequire('./add/operator/last');\n\nrequire('./add/operator/let');\n\nrequire('./add/operator/every');\n\nrequire('./add/operator/map');\n\nrequire('./add/operator/mapTo');\n\nrequire('./add/operator/materialize');\n\nrequire('./add/operator/max');\n\nrequire('./add/operator/merge');\n\nrequire('./add/operator/mergeAll');\n\nrequire('./add/operator/mergeMap');\n\nrequire('./add/operator/mergeMapTo');\n\nrequire('./add/operator/mergeScan');\n\nrequire('./add/operator/min');\n\nrequire('./add/operator/multicast');\n\nrequire('./add/operator/observeOn');\n\nrequire('./add/operator/onErrorResumeNext');\n\nrequire('./add/operator/pairwise');\n\nrequire('./add/operator/partition');\n\nrequire('./add/operator/pluck');\n\nrequire('./add/operator/publish');\n\nrequire('./add/operator/publishBehavior');\n\nrequire('./add/operator/publishReplay');\n\nrequire('./add/operator/publishLast');\n\nrequire('./add/operator/race');\n\nrequire('./add/operator/reduce');\n\nrequire('./add/operator/repeat');\n\nrequire('./add/operator/repeatWhen');\n\nrequire('./add/operator/retry');\n\nrequire('./add/operator/retryWhen');\n\nrequire('./add/operator/sample');\n\nrequire('./add/operator/sampleTime');\n\nrequire('./add/operator/scan');\n\nrequire('./add/operator/sequenceEqual');\n\nrequire('./add/operator/share');\n\nrequire('./add/operator/shareReplay');\n\nrequire('./add/operator/single');\n\nrequire('./add/operator/skip');\n\nrequire('./add/operator/skipLast');\n\nrequire('./add/operator/skipUntil');\n\nrequire('./add/operator/skipWhile');\n\nrequire('./add/operator/startWith');\n\nrequire('./add/operator/subscribeOn');\n\nrequire('./add/operator/switch');\n\nrequire('./add/operator/switchMap');\n\nrequire('./add/operator/switchMapTo');\n\nrequire('./add/operator/take');\n\nrequire('./add/operator/takeLast');\n\nrequire('./add/operator/takeUntil');\n\nrequire('./add/operator/takeWhile');\n\nrequire('./add/operator/throttle');\n\nrequire('./add/operator/throttleTime');\n\nrequire('./add/operator/timeInterval');\n\nrequire('./add/operator/timeout');\n\nrequire('./add/operator/timeoutWith');\n\nrequire('./add/operator/timestamp');\n\nrequire('./add/operator/toArray');\n\nrequire('./add/operator/toPromise');\n\nrequire('./add/operator/window');\n\nrequire('./add/operator/windowCount');\n\nrequire('./add/operator/windowTime');\n\nrequire('./add/operator/windowToggle');\n\nrequire('./add/operator/windowWhen');\n\nrequire('./add/operator/withLatestFrom');\n\nrequire('./add/operator/zip');\n\nrequire('./add/operator/zipAll');\n/* tslint:disable:no-unused-variable */\n\n\nvar Subscription_1 = require('./Subscription');\n\nexports.Subscription = Subscription_1.Subscription;\n\nvar Subscriber_1 = require('./Subscriber');\n\nexports.Subscriber = Subscriber_1.Subscriber;\n\nvar AsyncSubject_1 = require('./AsyncSubject');\n\nexports.AsyncSubject = AsyncSubject_1.AsyncSubject;\n\nvar ReplaySubject_1 = require('./ReplaySubject');\n\nexports.ReplaySubject = ReplaySubject_1.ReplaySubject;\n\nvar BehaviorSubject_1 = require('./BehaviorSubject');\n\nexports.BehaviorSubject = BehaviorSubject_1.BehaviorSubject;\n\nvar ConnectableObservable_1 = require('./observable/ConnectableObservable');\n\nexports.ConnectableObservable = ConnectableObservable_1.ConnectableObservable;\n\nvar Notification_1 = require('./Notification');\n\nexports.Notification = Notification_1.Notification;\n\nvar EmptyError_1 = require('./util/EmptyError');\n\nexports.EmptyError = EmptyError_1.EmptyError;\n\nvar ArgumentOutOfRangeError_1 = require('./util/ArgumentOutOfRangeError');\n\nexports.ArgumentOutOfRangeError = ArgumentOutOfRangeError_1.ArgumentOutOfRangeError;\n\nvar ObjectUnsubscribedError_1 = require('./util/ObjectUnsubscribedError');\n\nexports.ObjectUnsubscribedError = ObjectUnsubscribedError_1.ObjectUnsubscribedError;\n\nvar TimeoutError_1 = require('./util/TimeoutError');\n\nexports.TimeoutError = TimeoutError_1.TimeoutError;\n\nvar UnsubscriptionError_1 = require('./util/UnsubscriptionError');\n\nexports.UnsubscriptionError = UnsubscriptionError_1.UnsubscriptionError;\n\nvar timeInterval_1 = require('./operator/timeInterval');\n\nexports.TimeInterval = timeInterval_1.TimeInterval;\n\nvar timestamp_1 = require('./operators/timestamp');\n\nexports.Timestamp = timestamp_1.Timestamp;\n\nvar TestScheduler_1 = require('./testing/TestScheduler');\n\nexports.TestScheduler = TestScheduler_1.TestScheduler;\n\nvar VirtualTimeScheduler_1 = require('./scheduler/VirtualTimeScheduler');\n\nexports.VirtualTimeScheduler = VirtualTimeScheduler_1.VirtualTimeScheduler;\n\nvar AjaxObservable_1 = require('./observable/dom/AjaxObservable');\n\nexports.AjaxResponse = AjaxObservable_1.AjaxResponse;\nexports.AjaxError = AjaxObservable_1.AjaxError;\nexports.AjaxTimeoutError = AjaxObservable_1.AjaxTimeoutError;\n\nvar pipe_1 = require('./util/pipe');\n\nexports.pipe = pipe_1.pipe;\n\nvar asap_1 = require('./scheduler/asap');\n\nvar async_1 = require('./scheduler/async');\n\nvar queue_1 = require('./scheduler/queue');\n\nvar animationFrame_1 = require('./scheduler/animationFrame');\n\nvar rxSubscriber_1 = require('./symbol/rxSubscriber');\n\nvar iterator_1 = require('./symbol/iterator');\n\nvar observable_1 = require('./symbol/observable');\n\nvar _operators = require('./operators');\n\nexports.operators = _operators;\n/* tslint:enable:no-unused-variable */\n\n/**\n * @typedef {Object} Rx.Scheduler\n * @property {Scheduler} queue Schedules on a queue in the current event frame\n * (trampoline scheduler). Use this for iteration operations.\n * @property {Scheduler} asap Schedules on the micro task queue, which uses the\n * fastest transport mechanism available, either Node.js' `process.nextTick()`\n * or Web Worker MessageChannel or setTimeout or others. Use this for\n * asynchronous conversions.\n * @property {Scheduler} async Schedules work with `setInterval`. Use this for\n * time-based operations.\n * @property {Scheduler} animationFrame Schedules work with `requestAnimationFrame`.\n * Use this for synchronizing with the platform's painting\n */\n\nvar Scheduler = {\n  asap: asap_1.asap,\n  queue: queue_1.queue,\n  animationFrame: animationFrame_1.animationFrame,\n  async: async_1.async\n};\nexports.Scheduler = Scheduler;\n/**\n * @typedef {Object} Rx.Symbol\n * @property {Symbol|string} rxSubscriber A symbol to use as a property name to\n * retrieve an \"Rx safe\" Observer from an object. \"Rx safety\" can be defined as\n * an object that has all of the traits of an Rx Subscriber, including the\n * ability to add and remove subscriptions to the subscription chain and\n * guarantees involving event triggering (can't \"next\" after unsubscription,\n * etc).\n * @property {Symbol|string} observable A symbol to use as a property name to\n * retrieve an Observable as defined by the [ECMAScript \"Observable\" spec](https://github.com/zenparsing/es-observable).\n * @property {Symbol|string} iterator The ES6 symbol to use as a property name\n * to retrieve an iterator from an object.\n */\n\nvar Symbol = {\n  rxSubscriber: rxSubscriber_1.rxSubscriber,\n  observable: observable_1.observable,\n  iterator: iterator_1.iterator\n};\nexports.Symbol = Symbol;","map":{"version":3,"sources":["../src/Rx.ts"],"names":[],"mappings":"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","sourcesContent":["/* tslint:disable:no-unused-variable */\n// Subject imported before Observable to bypass circular dependency issue since\n// Subject extends Observable and Observable references Subject in it's\n// definition\nexport {Subject, AnonymousSubject} from './Subject';\n/* tslint:enable:no-unused-variable */\nexport {Observable} from './Observable';\n\n// statics\n/* tslint:disable:no-use-before-declare */\nimport './add/observable/bindCallback';\nimport './add/observable/bindNodeCallback';\nimport './add/observable/combineLatest';\nimport './add/observable/concat';\nimport './add/observable/defer';\nimport './add/observable/empty';\nimport './add/observable/forkJoin';\nimport './add/observable/from';\nimport './add/observable/fromEvent';\nimport './add/observable/fromEventPattern';\nimport './add/observable/fromPromise';\nimport './add/observable/generate';\nimport './add/observable/if';\nimport './add/observable/interval';\nimport './add/observable/merge';\nimport './add/observable/race';\nimport './add/observable/never';\nimport './add/observable/of';\nimport './add/observable/onErrorResumeNext';\nimport './add/observable/pairs';\nimport './add/observable/range';\nimport './add/observable/using';\nimport './add/observable/throw';\nimport './add/observable/timer';\nimport './add/observable/zip';\n\n//dom\nimport './add/observable/dom/ajax';\nimport './add/observable/dom/webSocket';\n\n//operators\nimport './add/operator/buffer';\nimport './add/operator/bufferCount';\nimport './add/operator/bufferTime';\nimport './add/operator/bufferToggle';\nimport './add/operator/bufferWhen';\nimport './add/operator/catch';\nimport './add/operator/combineAll';\nimport './add/operator/combineLatest';\nimport './add/operator/concat';\nimport './add/operator/concatAll';\nimport './add/operator/concatMap';\nimport './add/operator/concatMapTo';\nimport './add/operator/count';\nimport './add/operator/dematerialize';\nimport './add/operator/debounce';\nimport './add/operator/debounceTime';\nimport './add/operator/defaultIfEmpty';\nimport './add/operator/delay';\nimport './add/operator/delayWhen';\nimport './add/operator/distinct';\nimport './add/operator/distinctUntilChanged';\nimport './add/operator/distinctUntilKeyChanged';\nimport './add/operator/do';\nimport './add/operator/exhaust';\nimport './add/operator/exhaustMap';\nimport './add/operator/expand';\nimport './add/operator/elementAt';\nimport './add/operator/filter';\nimport './add/operator/finally';\nimport './add/operator/find';\nimport './add/operator/findIndex';\nimport './add/operator/first';\nimport './add/operator/groupBy';\nimport './add/operator/ignoreElements';\nimport './add/operator/isEmpty';\nimport './add/operator/audit';\nimport './add/operator/auditTime';\nimport './add/operator/last';\nimport './add/operator/let';\nimport './add/operator/every';\nimport './add/operator/map';\nimport './add/operator/mapTo';\nimport './add/operator/materialize';\nimport './add/operator/max';\nimport './add/operator/merge';\nimport './add/operator/mergeAll';\nimport './add/operator/mergeMap';\nimport './add/operator/mergeMapTo';\nimport './add/operator/mergeScan';\nimport './add/operator/min';\nimport './add/operator/multicast';\nimport './add/operator/observeOn';\nimport './add/operator/onErrorResumeNext';\nimport './add/operator/pairwise';\nimport './add/operator/partition';\nimport './add/operator/pluck';\nimport './add/operator/publish';\nimport './add/operator/publishBehavior';\nimport './add/operator/publishReplay';\nimport './add/operator/publishLast';\nimport './add/operator/race';\nimport './add/operator/reduce';\nimport './add/operator/repeat';\nimport './add/operator/repeatWhen';\nimport './add/operator/retry';\nimport './add/operator/retryWhen';\nimport './add/operator/sample';\nimport './add/operator/sampleTime';\nimport './add/operator/scan';\nimport './add/operator/sequenceEqual';\nimport './add/operator/share';\nimport './add/operator/shareReplay';\nimport './add/operator/single';\nimport './add/operator/skip';\nimport './add/operator/skipLast';\nimport './add/operator/skipUntil';\nimport './add/operator/skipWhile';\nimport './add/operator/startWith';\nimport './add/operator/subscribeOn';\nimport './add/operator/switch';\nimport './add/operator/switchMap';\nimport './add/operator/switchMapTo';\nimport './add/operator/take';\nimport './add/operator/takeLast';\nimport './add/operator/takeUntil';\nimport './add/operator/takeWhile';\nimport './add/operator/throttle';\nimport './add/operator/throttleTime';\nimport './add/operator/timeInterval';\nimport './add/operator/timeout';\nimport './add/operator/timeoutWith';\nimport './add/operator/timestamp';\nimport './add/operator/toArray';\nimport './add/operator/toPromise';\nimport './add/operator/window';\nimport './add/operator/windowCount';\nimport './add/operator/windowTime';\nimport './add/operator/windowToggle';\nimport './add/operator/windowWhen';\nimport './add/operator/withLatestFrom';\nimport './add/operator/zip';\nimport './add/operator/zipAll';\n\n/* tslint:disable:no-unused-variable */\nexport {Operator} from './Operator';\nexport {Observer} from './Observer';\nexport {Subscription} from './Subscription';\nexport {Subscriber} from './Subscriber';\nexport {AsyncSubject} from './AsyncSubject';\nexport {ReplaySubject} from './ReplaySubject';\nexport {BehaviorSubject} from './BehaviorSubject';\nexport {ConnectableObservable} from './observable/ConnectableObservable';\nexport {Notification} from './Notification';\nexport {EmptyError} from './util/EmptyError';\nexport {ArgumentOutOfRangeError} from './util/ArgumentOutOfRangeError';\nexport {ObjectUnsubscribedError} from './util/ObjectUnsubscribedError';\nexport {TimeoutError} from './util/TimeoutError';\nexport {UnsubscriptionError} from './util/UnsubscriptionError';\nexport {TimeInterval} from './operator/timeInterval';\nexport {Timestamp} from './operators/timestamp';\nexport {TestScheduler} from './testing/TestScheduler';\nexport {VirtualTimeScheduler} from './scheduler/VirtualTimeScheduler';\nexport {AjaxRequest, AjaxResponse, AjaxError, AjaxTimeoutError} from './observable/dom/AjaxObservable';\nexport { pipe } from './util/pipe';\n\nimport { asap } from './scheduler/asap';\nimport { async } from './scheduler/async';\nimport { queue } from './scheduler/queue';\nimport { animationFrame } from './scheduler/animationFrame';\nimport { AsapScheduler } from './scheduler/AsapScheduler';\nimport { AsyncScheduler } from './scheduler/AsyncScheduler';\nimport { QueueScheduler } from './scheduler/QueueScheduler';\nimport { AnimationFrameScheduler } from './scheduler/AnimationFrameScheduler';\nimport { rxSubscriber } from './symbol/rxSubscriber';\nimport { iterator } from './symbol/iterator';\nimport { observable } from './symbol/observable';\n\nimport * as _operators from './operators';\n\nexport const operators = _operators;\n\n/* tslint:enable:no-unused-variable */\n\n/**\n * @typedef {Object} Rx.Scheduler\n * @property {Scheduler} queue Schedules on a queue in the current event frame\n * (trampoline scheduler). Use this for iteration operations.\n * @property {Scheduler} asap Schedules on the micro task queue, which uses the\n * fastest transport mechanism available, either Node.js' `process.nextTick()`\n * or Web Worker MessageChannel or setTimeout or others. Use this for\n * asynchronous conversions.\n * @property {Scheduler} async Schedules work with `setInterval`. Use this for\n * time-based operations.\n * @property {Scheduler} animationFrame Schedules work with `requestAnimationFrame`.\n * Use this for synchronizing with the platform's painting\n */\nlet Scheduler = {\n  asap,\n  queue,\n  animationFrame,\n  async\n};\n\n/**\n * @typedef {Object} Rx.Symbol\n * @property {Symbol|string} rxSubscriber A symbol to use as a property name to\n * retrieve an \"Rx safe\" Observer from an object. \"Rx safety\" can be defined as\n * an object that has all of the traits of an Rx Subscriber, including the\n * ability to add and remove subscriptions to the subscription chain and\n * guarantees involving event triggering (can't \"next\" after unsubscription,\n * etc).\n * @property {Symbol|string} observable A symbol to use as a property name to\n * retrieve an Observable as defined by the [ECMAScript \"Observable\" spec](https://github.com/zenparsing/es-observable).\n * @property {Symbol|string} iterator The ES6 symbol to use as a property name\n * to retrieve an iterator from an object.\n */\nlet Symbol = {\n  rxSubscriber,\n  observable,\n  iterator\n};\n\nexport {\n    Scheduler,\n    Symbol\n};\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}