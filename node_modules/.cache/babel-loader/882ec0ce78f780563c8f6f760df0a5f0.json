{"ast":null,"code":"\"use strict\";\n\nvar zip_1 = require('./zip');\n\nfunction zipAll(project) {\n  return function (source) {\n    return source.lift(new zip_1.ZipOperator(project));\n  };\n}\n\nexports.zipAll = zipAll;","map":{"version":3,"sources":["../../src/operators/zipAll.ts"],"names":[],"mappings":";;AAAA,IAAA,KAAA,GAAA,OAAA,CAA4B,OAA5B,CAAA;;AAIA,SAAA,MAAA,CAA6B,OAA7B,EAAmE;AACjE,SAAO,UAAC,MAAD,EAAsB;AAAK,WAAA,MAAM,CAAC,IAAP,CAAY,IAAI,KAAA,CAAA,WAAJ,CAAZ,OAAY,CAAZ,CAAA;AAAqC,GAAvE;AACD;;AAFe,OAAA,CAAA,MAAA,GAAM,MAAN","sourcesContent":["import { ZipOperator } from './zip';\nimport { Observable } from '../Observable';\nimport { OperatorFunction } from '../interfaces';\n\nexport function zipAll<T, R>(project?: (...values: Array<any>) => R): OperatorFunction<T, R> {\n  return (source: Observable<T>) => source.lift(new ZipOperator(project));\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}