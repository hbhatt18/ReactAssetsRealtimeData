{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\het\\\\ReactProject\\\\ch02\\\\02_02\\\\start\\\\react-is-fun\\\\src\\\\index.js\";\n\n/*import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\nimport React, { Component } from 'react'\nimport { render } from 'react-dom'\nimport './index.css'\nimport * as serviceWorker from './serviceWorker'\n/*\nlet bookList = [\n  {\"title\": \"The sun rises\", \"author\": \"Earnest Hemmingway\", \"numberOfPages\": 250},\n  {\"title\": \"White Teeth\", \"author\": \"Zadie Smith\", \"numberOfPages\": 480},\n  {\"title\": \"Cat's Cradle\", \"author\": \"KurtVonnegut\", \"numberOfPages\": 305}\n]\n\nconst Book = ({title, author, numberOfPages,freeBookmark}) => {\n  return(\n    <section>\n      <h2>{title}</h2>\n      <p>By: {author}</p>\n      <p>Pages: {numberOfPages}</p>\n      <p>Free Bookmark Today {freeBookmark ? 'yes!' : 'no!'}</p>\n    </section>\n  )\n}\n\nconst Hiring = () =>{\n  return(\n    <div>The Library is hiring. Go to the careers.</div>\n  )\n}\n\nconst NotHiring = () =>{\n  return(\n    <div>The Library is not hiring. Please chekc back later.</div>\n  )\n}\n\nclass Library extends React.Component {\n\n  state = { \n    open: true,\n    freeBookmark: false,\n    hiring: true\n  }\n  \n  toggleOpenClosed = () => {\n    this.setState( prevState =>({\n      open: !prevState.open\n    }))\n  }\n  render(){\n    const { books } = this.props\n    return(\n      <div>\n        {this.state.hiring? <Hiring/> : <NotHiring/>}\n        <h1>The Library is {this.state.open ? 'open' : 'close'} </h1>\n        <button onClick={this.toggleOpenClosed}>Change</button>\n        {books.map(\n          (book, i) => \n                <Book\n                    key={i} \n                    title={book.title}\n                    author={book.author}\n                    numberOfPages={book.numberOfPages}\n                    freeBookmark={this.state.freeBookmark}/>\n  \n        )}\n      </div>\n    )\n  }\n}\n\nrender(\n  <Library books={bookList}/>,\n  document.getElementById('root')\n)\n*/\nimport React, { Component } from 'react';\nimport { render } from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport TableData from './Table.js';\nconst elements = [];\n\nclass Table extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      students: [{\n        id: 1,\n        name: 'Wasif',\n        age: 21,\n        email: 'wasif@email.com'\n      }, {\n        id: 2,\n        name: 'Ali',\n        age: 19,\n        email: 'ali@email.com'\n      }, {\n        id: 3,\n        name: 'Saad',\n        age: 16,\n        email: 'saad@email.com'\n      }, {\n        id: 4,\n        name: 'Asad',\n        age: 25,\n        email: 'asad@email.com'\n      }]\n    };\n  }\n\n  renderTableHeader() {\n    let header = Object.keys(this.state.students[0]);\n    return header.map((key, index) => {\n      return /*#__PURE__*/React.createElement(\"th\", {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 16\n        }\n      }, key.toUpperCase());\n    });\n  }\n\n  renderTableData() {\n    return this.state.students.map((student, index) => {\n      const {\n        id,\n        name,\n        age,\n        email\n      } = student; //destructuring\n\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 12\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 15\n        }\n      }, id), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 15\n        }\n      }, name), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 15\n        }\n      }, age), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 15\n        }\n      }, email));\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      id: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 12\n      }\n    }, \"React Dynamic Table\"), /*#__PURE__*/React.createElement(\"table\", {\n      id: \"students\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 18\n      }\n    }, this.renderTableHeader()), this.renderTableData())));\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/React.createElement(Table, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 151,\n    columnNumber: 17\n  }\n}), document.getElementById('root'));\nserviceWorker.unregister();","map":{"version":3,"sources":["C:/Users/het/ReactProject/ch02/02_02/start/react-is-fun/src/index.js"],"names":["React","Component","render","serviceWorker","TableData","elements","Table","constructor","props","state","students","id","name","age","email","renderTableHeader","header","Object","keys","map","key","index","toUpperCase","renderTableData","student","ReactDOM","document","getElementById","unregister"],"mappings":"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","sourcesContent":["/*import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\nimport React, { Component } from 'react'\nimport { render } from 'react-dom'\nimport './index.css'\nimport * as serviceWorker from './serviceWorker'\n/*\nlet bookList = [\n  {\"title\": \"The sun rises\", \"author\": \"Earnest Hemmingway\", \"numberOfPages\": 250},\n  {\"title\": \"White Teeth\", \"author\": \"Zadie Smith\", \"numberOfPages\": 480},\n  {\"title\": \"Cat's Cradle\", \"author\": \"KurtVonnegut\", \"numberOfPages\": 305}\n]\n\nconst Book = ({title, author, numberOfPages,freeBookmark}) => {\n  return(\n    <section>\n      <h2>{title}</h2>\n      <p>By: {author}</p>\n      <p>Pages: {numberOfPages}</p>\n      <p>Free Bookmark Today {freeBookmark ? 'yes!' : 'no!'}</p>\n    </section>\n  )\n}\n\nconst Hiring = () =>{\n  return(\n    <div>The Library is hiring. Go to the careers.</div>\n  )\n}\n\nconst NotHiring = () =>{\n  return(\n    <div>The Library is not hiring. Please chekc back later.</div>\n  )\n}\n\nclass Library extends React.Component {\n\n  state = { \n    open: true,\n    freeBookmark: false,\n    hiring: true\n  }\n  \n  toggleOpenClosed = () => {\n    this.setState( prevState =>({\n      open: !prevState.open\n    }))\n  }\n  render(){\n    const { books } = this.props\n    return(\n      <div>\n        {this.state.hiring? <Hiring/> : <NotHiring/>}\n        <h1>The Library is {this.state.open ? 'open' : 'close'} </h1>\n        <button onClick={this.toggleOpenClosed}>Change</button>\n        {books.map(\n          (book, i) => \n                <Book\n                    key={i} \n                    title={book.title}\n                    author={book.author}\n                    numberOfPages={book.numberOfPages}\n                    freeBookmark={this.state.freeBookmark}/>\n  \n        )}\n      </div>\n    )\n  }\n}\n\nrender(\n  <Library books={bookList}/>,\n  document.getElementById('root')\n)\n*/\n\n\nimport React, { Component } from 'react'\nimport { render } from 'react-dom'\nimport './index.css'\nimport * as serviceWorker from './serviceWorker'\nimport TableData from './Table.js';\n\nconst elements = []\n\nclass Table extends React.Component {\n  constructor(props) {\n     super(props)\n     this.state = {\n        students: [\n           { id: 1, name: 'Wasif', age: 21, email: 'wasif@email.com' },\n           { id: 2, name: 'Ali', age: 19, email: 'ali@email.com' },\n           { id: 3, name: 'Saad', age: 16, email: 'saad@email.com' },\n           { id: 4, name: 'Asad', age: 25, email: 'asad@email.com' }\n        ]\n     }\n  }\n\n  renderTableHeader() {\n     let header = Object.keys(this.state.students[0])\n     return header.map((key, index) => {\n        return <th key={index}>{key.toUpperCase()}</th>\n     })\n  }\n\n  renderTableData() {\n     return this.state.students.map((student, index) => {\n        const { id, name, age, email } = student //destructuring\n        return (\n           <tr key={id}>\n              <td>{id}</td>\n              <td>{name}</td>\n              <td>{age}</td>\n              <td>{email}</td>\n           </tr>\n        )\n     })\n  }\n\n  render() {\n     return (\n        <div>\n           <h1 id='title'>React Dynamic Table</h1>\n           <table id='students'>\n              <tbody>\n                 <tr>{this.renderTableHeader()}</tr>\n                 {this.renderTableData()}\n              </tbody>\n           </table>\n        </div>\n     )\n  }\n}\n\nReactDOM.render(<Table />, document.getElementById('root'));\n\nserviceWorker.unregister()"]},"metadata":{},"sourceType":"module"}