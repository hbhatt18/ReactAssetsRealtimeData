{"ast":null,"code":"\"use strict\";\n\nvar async_1 = require('../scheduler/async');\n\nvar map_1 = require('./map');\n/**\n * @param scheduler\n * @return {Observable<Timestamp<any>>|WebSocketSubject<T>|Observable<T>}\n * @method timestamp\n * @owner Observable\n */\n\n\nfunction timestamp(scheduler) {\n  if (scheduler === void 0) {\n    scheduler = async_1.async;\n  }\n\n  return map_1.map(function (value) {\n    return new Timestamp(value, scheduler.now());\n  }); // return (source: Observable<T>) => source.lift(new TimestampOperator(scheduler));\n}\n\nexports.timestamp = timestamp;\n\nvar Timestamp = function () {\n  function Timestamp(value, timestamp) {\n    this.value = value;\n    this.timestamp = timestamp;\n  }\n\n  return Timestamp;\n}();\n\nexports.Timestamp = Timestamp;\n;","map":{"version":3,"sources":["../../src/operators/timestamp.ts"],"names":[],"mappings":";;AAEA,IAAA,OAAA,GAAA,OAAA,CAAsB,oBAAtB,CAAA;;AAEA,IAAA,KAAA,GAAA,OAAA,CAAoB,OAApB,CAAA;AAEA;;;;;;;;AAMA,SAAA,SAAA,CAA6B,SAA7B,EAA0D;AAA7B,MAAA,SAAA,KAAA,KAAA,CAAA,EAA6B;AAA7B,IAAA,SAAA,GAAA,OAAA,CAAA,KAAA;AAA6B;;AACxD,SAAO,KAAA,CAAA,GAAA,CAAI,UAAC,KAAD,EAAS;AAAK,WAAA,IAAI,SAAJ,CAAc,KAAd,EAAqB,SAAS,CAA9B,GAAqB,EAArB,CAAA;AAAqC,GAAvD,CAAP,CADwD,CAExD;AACD;;AAHe,OAAA,CAAA,SAAA,GAAS,SAAT;;AAKhB,IAAA,SAAA,GAAA,YAAA;AACE,WAAA,SAAA,CAAmB,KAAnB,EAAoC,SAApC,EAAqD;AAAlC,SAAA,KAAA,GAAA,KAAA;AAAiB,SAAA,SAAA,GAAA,SAAA;AACnC;;AACH,SAAA,SAAA;AAAC,CAHD,EAAA;;AAAa,OAAA,CAAA,SAAA,GAAS,SAAT;AAGZ","sourcesContent":["\nimport { IScheduler } from '../Scheduler';\nimport { async } from '../scheduler/async';\nimport { OperatorFunction } from '../interfaces';\nimport { map } from './map';\n\n/**\n * @param scheduler\n * @return {Observable<Timestamp<any>>|WebSocketSubject<T>|Observable<T>}\n * @method timestamp\n * @owner Observable\n */\nexport function timestamp<T>(scheduler: IScheduler = async): OperatorFunction<T, Timestamp<T>> {\n  return map((value: T) => new Timestamp(value, scheduler.now()));\n  // return (source: Observable<T>) => source.lift(new TimestampOperator(scheduler));\n}\n\nexport class Timestamp<T> {\n  constructor(public value: T, public timestamp: number) {\n  }\n};\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}