{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function (d, b) {\n  for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\n  function __() {\n    this.constructor = d;\n  }\n\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\nvar Observable_1 = require('../Observable');\n\nvar asap_1 = require('../scheduler/asap');\n\nvar isNumeric_1 = require('../util/isNumeric');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\n\n\nvar SubscribeOnObservable = function (_super) {\n  __extends(SubscribeOnObservable, _super);\n\n  function SubscribeOnObservable(source, delayTime, scheduler) {\n    if (delayTime === void 0) {\n      delayTime = 0;\n    }\n\n    if (scheduler === void 0) {\n      scheduler = asap_1.asap;\n    }\n\n    _super.call(this);\n\n    this.source = source;\n    this.delayTime = delayTime;\n    this.scheduler = scheduler;\n\n    if (!isNumeric_1.isNumeric(delayTime) || delayTime < 0) {\n      this.delayTime = 0;\n    }\n\n    if (!scheduler || typeof scheduler.schedule !== 'function') {\n      this.scheduler = asap_1.asap;\n    }\n  }\n\n  SubscribeOnObservable.create = function (source, delay, scheduler) {\n    if (delay === void 0) {\n      delay = 0;\n    }\n\n    if (scheduler === void 0) {\n      scheduler = asap_1.asap;\n    }\n\n    return new SubscribeOnObservable(source, delay, scheduler);\n  };\n\n  SubscribeOnObservable.dispatch = function (arg) {\n    var source = arg.source,\n        subscriber = arg.subscriber;\n    return this.add(source.subscribe(subscriber));\n  };\n  /** @deprecated internal use only */\n\n\n  SubscribeOnObservable.prototype._subscribe = function (subscriber) {\n    var delay = this.delayTime;\n    var source = this.source;\n    var scheduler = this.scheduler;\n    return scheduler.schedule(SubscribeOnObservable.dispatch, delay, {\n      source: source,\n      subscriber: subscriber\n    });\n  };\n\n  return SubscribeOnObservable;\n}(Observable_1.Observable);\n\nexports.SubscribeOnObservable = SubscribeOnObservable;","map":{"version":3,"sources":["../../src/observable/SubscribeOnObservable.ts"],"names":[],"mappings":";;;;;;;;;;;;AAIA,IAAA,YAAA,GAAA,OAAA,CAA2B,eAA3B,CAAA;;AACA,IAAA,MAAA,GAAA,OAAA,CAAqB,mBAArB,CAAA;;AACA,IAAA,WAAA,GAAA,OAAA,CAA0B,mBAA1B,CAAA;AAOA;;;;;;;AAKA,IAAA,qBAAA,GAAA,UAAA,MAAA,EAAA;AAA8C,EAAA,SAAA,CAAA,qBAAA,EAAA,MAAA,CAAA;;AAU5C,WAAA,qBAAA,CAAmB,MAAnB,EACoB,SADpB,EAEoB,SAFpB,EAEgD;AADpC,QAAA,SAAA,KAAA,KAAA,CAAA,EAA6B;AAA7B,MAAA,SAAA,GAAA,CAAA;AAA6B;;AAC7B,QAAA,SAAA,KAAA,KAAA,CAAA,EAAoC;AAApC,MAAA,SAAA,GAAA,MAAA,CAAA,IAAA;AAAoC;;AAC9C,IAAA,MAAA,CAAA,IAAA,CAAA,IAAA;;AAHiB,SAAA,MAAA,GAAA,MAAA;AACC,SAAA,SAAA,GAAA,SAAA;AACA,SAAA,SAAA,GAAA,SAAA;;AAElB,QAAI,CAAC,WAAA,CAAA,SAAA,CAAU,SAAV,CAAD,IAAyB,SAAS,GAAG,CAAzC,EAA4C;AAC1C,WAAK,SAAL,GAAiB,CAAjB;AACD;;AACD,QAAI,CAAC,SAAD,IAAc,OAAO,SAAS,CAAC,QAAjB,KAA8B,UAAhD,EAA4D;AAC1D,WAAK,SAAL,GAAiB,MAAA,CAAA,IAAjB;AACD;AACF;;AAnBM,EAAA,qBAAA,CAAA,MAAA,GAAP,UAAiB,MAAjB,EAAwC,KAAxC,EAA2D,SAA3D,EAAuF;AAA/C,QAAA,KAAA,KAAA,KAAA,CAAA,EAAiB;AAAjB,MAAA,KAAA,GAAA,CAAA;AAAiB;;AAAE,QAAA,SAAA,KAAA,KAAA,CAAA,EAA4B;AAA5B,MAAA,SAAA,GAAA,MAAA,CAAA,IAAA;AAA4B;;AACrF,WAAO,IAAI,qBAAJ,CAA0B,MAA1B,EAAkC,KAAlC,EAAyC,SAAzC,CAAP;AACD,GAFM;;AAIA,EAAA,qBAAA,CAAA,QAAA,GAAP,UAAoC,GAApC,EAAuD;AAC7C,QAAA,MAAA,GAAA,GAAA,CAAA,MAAA;AAAA,QAAQ,UAAA,GAAA,GAAA,CAAA,UAAR;AACR,WAAO,KAAK,GAAL,CAAS,MAAM,CAAC,SAAP,CAAiB,UAAjB,CAAT,CAAP;AACD,GAHM;AAiBP;;;AAAqC,EAAA,qBAAA,CAAA,SAAA,CAAA,UAAA,GAAA,UAAW,UAAX,EAAoC;AACvE,QAAM,KAAK,GAAG,KAAK,SAAnB;AACA,QAAM,MAAM,GAAG,KAAK,MAApB;AACA,QAAM,SAAS,GAAG,KAAK,SAAvB;AAEA,WAAO,SAAS,CAAC,QAAV,CAAmB,qBAAqB,CAAC,QAAzC,EAAmD,KAAnD,EAA0D;AAC/D,MAAA,MAAA,EAAA,MAD+D;AACvD,MAAA,UAAA,EAAA;AADuD,KAA1D,CAAP;AAGD,GARoC;;AASvC,SAAA,qBAAA;AAAC,CA/BD,CAA8C,YAAA,CAAA,UAA9C,CAAA;;AAAa,OAAA,CAAA,qBAAA,GAAqB,qBAArB","sourcesContent":["import { Action } from '../scheduler/Action';\nimport { IScheduler } from '../Scheduler';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { Observable } from '../Observable';\nimport { asap } from '../scheduler/asap';\nimport { isNumeric } from '../util/isNumeric';\n\nexport interface DispatchArg<T> {\n  source: Observable<T>;\n  subscriber: Subscriber<T>;\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class SubscribeOnObservable<T> extends Observable<T> {\n  static create<T>(source: Observable<T>, delay: number = 0, scheduler: IScheduler = asap): Observable<T> {\n    return new SubscribeOnObservable(source, delay, scheduler);\n  }\n\n  static dispatch<T>(this: Action<T>, arg: DispatchArg<T>): Subscription {\n    const { source, subscriber } = arg;\n    return this.add(source.subscribe(subscriber));\n  }\n\n  constructor(public source: Observable<T>,\n              private delayTime: number = 0,\n              private scheduler: IScheduler = asap) {\n    super();\n    if (!isNumeric(delayTime) || delayTime < 0) {\n      this.delayTime = 0;\n    }\n    if (!scheduler || typeof scheduler.schedule !== 'function') {\n      this.scheduler = asap;\n    }\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<T>) {\n    const delay = this.delayTime;\n    const source = this.source;\n    const scheduler = this.scheduler;\n\n    return scheduler.schedule(SubscribeOnObservable.dispatch, delay, {\n      source, subscriber\n    });\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}