{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\het\\\\ReactProject\\\\ch02\\\\02_02\\\\start\\\\test\\\\src\\\\assetPrices.js\";\nimport React from 'react'; //import TimeAgo from 'react-timeago'\n\nclass assetPrices extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.getAssetPriceUpDownColor = assets => {\n      if (assets.price < assets.lastUpdate.slice(-2)[0].value) {\n        return 'red';\n      } else if (assets.price > assets.lastUpdate.slice(-2)[0].value) {\n        return 'green';\n      } else {\n        return null;\n      }\n    };\n\n    this.lastUpdatedAt = asset => {\n      let time_diff = Date.now() - Number(asset.lastUpdate.slice(-1)[0].time);\n\n      if (time_diff <= 4000) {\n        // stays 'just now' until this function is called again: WRONG\n        return 'just now';\n      } else if (time_diff > 4000 && time_diff < 60000) {\n        return '< 1m';\n      } else {\n        return '> 1m';\n      }\n    };\n  }\n\n  render() {\n    let lastUpdate = this.props.assets.lastUpdate;\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      className: this.props.assets.is_selected ? 'selected' : null,\n      id: this.props.assets.assetName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }\n    }, this.props.asset.assetName.toUpperCase()), /*#__PURE__*/React.createElement(\"td\", {\n      className: this.getAssetPriceUpDownColor(this.props.assets.price),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }\n    }, this.props.assets.price.toFixed(2)), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    }, this.lastUpdatedAt(this.props.stock_data)));\n  }\n\n}\n\nexport default assetPrices;","map":{"version":3,"sources":["C:/Users/het/ReactProject/ch02/02_02/start/test/src/assetPrices.js"],"names":["React","assetPrices","Component","getAssetPriceUpDownColor","assets","price","lastUpdate","slice","value","lastUpdatedAt","asset","time_diff","Date","now","Number","time","render","props","is_selected","assetName","toUpperCase","toFixed","stock_data"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AAEA,MAAMC,WAAN,SAA0BD,KAAK,CAACE,SAAhC,CAA0C;AAAA;AAAA;;AAAA,SAExCC,wBAFwC,GAEZC,MAAD,IAAW;AACpC,UAAGA,MAAM,CAACC,KAAP,GAAeD,MAAM,CAACE,UAAP,CAAkBC,KAAlB,CAAwB,CAAC,CAAzB,EAA4B,CAA5B,EAA+BC,KAAjD,EAAuD;AACrD,eAAO,KAAP;AACD,OAFD,MAGK,IAAGJ,MAAM,CAACC,KAAP,GAAeD,MAAM,CAACE,UAAP,CAAkBC,KAAlB,CAAwB,CAAC,CAAzB,EAA4B,CAA5B,EAA+BC,KAAjD,EAAuD;AAC1D,eAAO,OAAP;AACD,OAFI,MAGD;AACF,eAAO,IAAP;AACD;AACF,KAZuC;;AAAA,SAetCC,aAfsC,GAerBC,KAAD,IAAW;AACvB,UAAIC,SAAS,GAAGC,IAAI,CAACC,GAAL,KAAaC,MAAM,CAACJ,KAAK,CAACJ,UAAN,CAAiBC,KAAjB,CAAuB,CAAC,CAAxB,EAA2B,CAA3B,EAA8BQ,IAA/B,CAAnC;;AACA,UAAGJ,SAAS,IAAI,IAAhB,EAAqB;AACnB;AACA,eAAO,UAAP;AACD,OAHD,MAIK,IAAGA,SAAS,GAAG,IAAZ,IAAoBA,SAAS,GAAE,KAAlC,EAAwC;AAC3C,eAAO,MAAP;AACD,OAFI,MAGD;AACF,eAAO,MAAP;AACD;AACF,KA3BmC;AAAA;;AA8BxCK,EAAAA,MAAM,GAAG;AACP,QAAIV,UAAU,GAAG,KAAKW,KAAL,CAAWb,MAAX,CAAkBE,UAAnC;AACA,wBACE;AAAI,MAAA,SAAS,EAAG,KAAKW,KAAL,CAAWb,MAAX,CAAkBc,WAAlB,GAAgC,UAAhC,GAA6C,IAA7D;AAAoE,MAAA,EAAE,EAAE,KAAKD,KAAL,CAAWb,MAAX,CAAkBe,SAA1F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKF,KAAL,CAAWP,KAAX,CAAiBS,SAAjB,CAA2BC,WAA3B,EAAL,CADF,eAEE;AAAI,MAAA,SAAS,EAAE,KAAKjB,wBAAL,CAA8B,KAAKc,KAAL,CAAWb,MAAX,CAAkBC,KAAhD,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKY,KAAL,CAAWb,MAAX,CAAkBC,KAAlB,CAAwBgB,OAAxB,CAAgC,CAAhC,CADH,CAFF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKZ,aAAL,CAAmB,KAAKQ,KAAL,CAAWK,UAA9B,CAAL,CALF,CADF;AASD;;AAzCuC;;AA4C1C,eAAerB,WAAf","sourcesContent":["import React from 'react'\r\n//import TimeAgo from 'react-timeago'\r\n\r\nclass assetPrices extends React.Component {\r\n\r\n  getAssetPriceUpDownColor = (assets) =>{\r\n    if(assets.price < assets.lastUpdate.slice(-2)[0].value){\r\n      return 'red';\r\n    }\r\n    else if(assets.price > assets.lastUpdate.slice(-2)[0].value){\r\n      return 'green';\r\n    }\r\n    else{\r\n      return null;\r\n    }\r\n  }\r\n\r\n    // make this better\r\n    lastUpdatedAt = (asset) => {\r\n        let time_diff = Date.now() - Number(asset.lastUpdate.slice(-1)[0].time);\r\n        if(time_diff <= 4000){\r\n          // stays 'just now' until this function is called again: WRONG\r\n          return 'just now'\r\n        }\r\n        else if(time_diff > 4000 && time_diff <60000){\r\n          return '< 1m'\r\n        }\r\n        else{\r\n          return '> 1m'\r\n        }\r\n      }\r\n\r\n\r\n  render() {\r\n    let lastUpdate = this.props.assets.lastUpdate;\r\n    return (\r\n      <tr className={ this.props.assets.is_selected ? 'selected' : null } id={this.props.assets.assetName} >\r\n        <td>{this.props.asset.assetName.toUpperCase()}</td>\r\n        <td className={this.getAssetPriceUpDownColor(this.props.assets.price)}>\r\n          {this.props.assets.price.toFixed(2)}\r\n        </td>\r\n        <td>{this.lastUpdatedAt(this.props.stock_data)}</td>\r\n      </tr>\r\n    );\r\n  }\r\n}\r\n\r\nexport default assetPrices;"]},"metadata":{},"sourceType":"module"}