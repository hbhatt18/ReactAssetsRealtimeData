{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function (d, b) {\n  for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\n  function __() {\n    this.constructor = d;\n  }\n\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\nvar AsyncScheduler_1 = require('./AsyncScheduler');\n\nvar AsapScheduler = function (_super) {\n  __extends(AsapScheduler, _super);\n\n  function AsapScheduler() {\n    _super.apply(this, arguments);\n  }\n\n  AsapScheduler.prototype.flush = function (action) {\n    this.active = true;\n    this.scheduled = undefined;\n    var actions = this.actions;\n    var error;\n    var index = -1;\n    var count = actions.length;\n    action = action || actions.shift();\n\n    do {\n      if (error = action.execute(action.state, action.delay)) {\n        break;\n      }\n    } while (++index < count && (action = actions.shift()));\n\n    this.active = false;\n\n    if (error) {\n      while (++index < count && (action = actions.shift())) {\n        action.unsubscribe();\n      }\n\n      throw error;\n    }\n  };\n\n  return AsapScheduler;\n}(AsyncScheduler_1.AsyncScheduler);\n\nexports.AsapScheduler = AsapScheduler;","map":{"version":3,"sources":["../../src/scheduler/AsapScheduler.ts"],"names":[],"mappings":";;;;;;;;;;;;AACA,IAAA,gBAAA,GAAA,OAAA,CAA+B,kBAA/B,CAAA;;AAEA,IAAA,aAAA,GAAA,UAAA,MAAA,EAAA;AAAmC,EAAA,SAAA,CAAA,aAAA,EAAA,MAAA,CAAA;;AAAnC,WAAA,aAAA,GAAA;AAAmC,IAAA,MAAA,CAAA,KAAA,CAAA,IAAA,EAAA,SAAA;AA2BlC;;AA1BQ,EAAA,aAAA,CAAA,SAAA,CAAA,KAAA,GAAP,UAAa,MAAb,EAAsC;AAEpC,SAAK,MAAL,GAAc,IAAd;AACA,SAAK,SAAL,GAAiB,SAAjB;AAEO,QAAA,OAAA,GAAA,KAAA,OAAA;AACP,QAAI,KAAJ;AACA,QAAI,KAAK,GAAW,CAAC,CAArB;AACA,QAAI,KAAK,GAAW,OAAO,CAAC,MAA5B;AACA,IAAA,MAAM,GAAG,MAAM,IAAI,OAAO,CAAC,KAAR,EAAnB;;AAEA,OAAG;AACD,UAAI,KAAK,GAAG,MAAM,CAAC,OAAP,CAAe,MAAM,CAAC,KAAtB,EAA6B,MAAM,CAAC,KAApC,CAAZ,EAAwD;AACtD;AACD;AACF,KAJD,QAIS,EAAE,KAAF,GAAU,KAAV,KAAoB,MAAM,GAAG,OAAO,CAAC,KAAR,EAA7B,CAJT;;AAMA,SAAK,MAAL,GAAc,KAAd;;AAEA,QAAI,KAAJ,EAAW;AACT,aAAO,EAAE,KAAF,GAAU,KAAV,KAAoB,MAAM,GAAG,OAAO,CAAC,KAAR,EAA7B,CAAP,EAAsD;AACpD,QAAA,MAAM,CAAC,WAAP;AACD;;AACD,YAAM,KAAN;AACD;AACF,GAzBM;;AA0BT,SAAA,aAAA;AAAC,CA3BD,CAAmC,gBAAA,CAAA,cAAnC,CAAA;;AAAa,OAAA,CAAA,aAAA,GAAa,aAAb","sourcesContent":["import { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\n\nexport class AsapScheduler extends AsyncScheduler {\n  public flush(action?: AsyncAction<any>): void {\n\n    this.active = true;\n    this.scheduled = undefined;\n\n    const {actions} = this;\n    let error: any;\n    let index: number = -1;\n    let count: number = actions.length;\n    action = action || actions.shift();\n\n    do {\n      if (error = action.execute(action.state, action.delay)) {\n        break;\n      }\n    } while (++index < count && (action = actions.shift()));\n\n    this.active = false;\n\n    if (error) {\n      while (++index < count && (action = actions.shift())) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}