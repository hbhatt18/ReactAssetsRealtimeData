{"ast":null,"code":"\"use strict\";\n\nvar async_1 = require('../scheduler/async');\n\nvar timeInterval_1 = require('../operators/timeInterval');\n\nexports.TimeInterval = timeInterval_1.TimeInterval;\n/**\n * @param scheduler\n * @return {Observable<TimeInterval<any>>|WebSocketSubject<T>|Observable<T>}\n * @method timeInterval\n * @owner Observable\n */\n\nfunction timeInterval(scheduler) {\n  if (scheduler === void 0) {\n    scheduler = async_1.async;\n  }\n\n  return timeInterval_1.timeInterval(scheduler)(this);\n}\n\nexports.timeInterval = timeInterval;","map":{"version":3,"sources":["../../src/operator/timeInterval.ts"],"names":[],"mappings":";;AAEA,IAAA,OAAA,GAAA,OAAA,CAAsB,oBAAtB,CAAA;;AACA,IAAA,cAAA,GAAA,OAAA,CAA0D,2BAA1D,CAAA;;AACQ,OAAA,CAAA,YAAA,GAAY,cAAA,CAAA,YAAZ;AAER;;;;;;;AAMA,SAAA,YAAA,CAAqD,SAArD,EAAkF;AAA7B,MAAA,SAAA,KAAA,KAAA,CAAA,EAA6B;AAA7B,IAAA,SAAA,GAAA,OAAA,CAAA,KAAA;AAA6B;;AAChF,SAAO,cAAA,CAAA,YAAA,CAAY,SAAZ,EAAuB,IAAvB,CAAP;AACD;;AAFe,OAAA,CAAA,YAAA,GAAY,YAAZ","sourcesContent":["import { Observable } from '../Observable';\nimport { IScheduler } from '../Scheduler';\nimport { async } from '../scheduler/async';\nimport { timeInterval as higherOrder, TimeInterval } from '../operators/timeInterval';\nexport {TimeInterval};\n\n/**\n * @param scheduler\n * @return {Observable<TimeInterval<any>>|WebSocketSubject<T>|Observable<T>}\n * @method timeInterval\n * @owner Observable\n */\nexport function timeInterval<T>(this: Observable<T>, scheduler: IScheduler = async): Observable<TimeInterval<T>> {\n  return higherOrder(scheduler)(this) as Observable<TimeInterval<T>>;\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}